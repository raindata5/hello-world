{
	"name": "SQL script 2",
	"properties": {
		"content": {
			"query": "-- Step 1\n-- Create a db master key if one does not already exist, using your own password.\n-- CREATE MASTER KEY ENCRYPTION BY PASSWORD='MyStr9ngS3cr3t';\n\n\n\n-- Step 2\n-- Create a database scoped credential.\n-- This example uses the storage accounts secret key\nCREATE DATABASE SCOPED CREDENTIAL AccessDesignbookDataLake\nWITH \n\tIDENTITY = '6a46c4aa-00cb-4162-ab87-b820e733be68@https://login.microsoftonline.com/d3c2ee31-4e3f-40d3-a8a2-24eae08837d2/oauth2/token', \n    SECRET = 'OG.7Q~NlPEeQ6YypZXP-dvtZaNsaKVffKorRM';\n\n\n\n\n-- Step 3\n-- Create an external data source\n-- TYPE: HADOOP - PolyBase uses Hadoop APIs to access data in Azure blob storage.\n-- LOCATION: Provide Azure storage account name and blob container name.\n-- CREDENTIAL: Provide the credential created in the previous step.\n\nCREATE EXTERNAL DATA SOURCE AzureStorage1\nWITH (\n    TYPE = HADOOP,\n    LOCATION = 'abfss://raindata@dbdatalakerd.dfs.core.windows.net/',\n    CREDENTIAL = AccessDesignbookDataLake\n);\n\n\n-- DROP EXTERNAL DATA SOURCE AzureStorage1;\n-- DROP DATABASE SCOPED CREDENTIAL AccessDesignbookDataLake;\n\n\n-- Create an external file format\n\nCREATE EXTERNAL FILE FORMAT TextFile \nWITH \n(\n     FORMAT_TYPE = DelimitedText\n\t , FORMAT_OPTIONS (\n\t\t\t\tFIELD_TERMINATOR = ','\n\t\t\t\t, STRING_DELIMITER = '\"') \n);\n\n\n\n\n\n--Step 4\n-- Now define external tables to read data from Order and OrderDetail\nCREATE EXTERNAL TABLE dbo.ext_Order\n(\n\tOrderID\t\t\t\tint\t\t\t\tNOT NULL\n\t, CustomerID\t\tint\t\t\t\tNULL\n\t, EmployeeID\t\tint\t\t\t\tNULL\n\t, OrderDate\t\t\tnvarchar(40)\t\t\tNULL\n\t, RequiredDate\t\tnvarchar(40)\t\t\tNULL\n\t, ShippedDate\t\tnvarchar(40)\t\t\tNULL\n\t, ShipVia\t\t\tint\t\t\t\tNULL\n\t, Freight\t\t\tmoney\t\t\tNULL\n\t, ShipName\t\t\tnvarchar(40)\tNULL\n\t, ShipAddress\t\tnvarchar(60)\tNULL\n\t, ShipCity\t\t\tnvarchar(15)\tNULL\n\t, ShipRegion\t\tnvarchar(15)\tNULL\n\t, ShipPostalCode\tnvarchar(10)\tNULL\n\t, ShipCountry\t\tnvarchar(15)\tNULL\n\t, TotalAmount\t\tmoney\t\t\tNULL\n)\nWITH \n(\n    LOCATION='/Rawdata/[dbo].[Order]/',\n    DATA_SOURCE=AzureStorage1,\n    FILE_FORMAT=TextFile\n);\n\nCREATE EXTERNAL TABLE dbo.ext_OrderDetail\n(\n\tOrderID\t\t\tint\t\t\t\tNOT NULL\n\t, ProductID\t\tint\t\t\t\tNOT NULL\n\t, UnitPrice\t\tmoney\t\t\tNOT NULL\n\t, Quantity\t\tsmallint\t\tNOT NULL\n\t, Discount\t\tnumeric(5, 4)\tNOT NULL\n)\nWITH \n(\n    LOCATION='/Rawdata/[dbo].[OrderDetail]/',\n    DATA_SOURCE=AzureStorage1,\n    FILE_FORMAT=TextFile\n);\nGO\n\n\n\n\n-- Step 5\n-- Create a sproc that imports the data using CTAS that can be called from Azure Data Factory:\n-- IMPORT into SQL Pool\nCREATE PROCEDURE usp_Import_factOrderData\nAS\nCREATE TABLE dbo.stage_factOrder\nWITH\n(   \n    DISTRIBUTION = ROUND_ROBIN\n\t, CLUSTERED COLUMNSTORE INDEX\n    \n)\nAS\nSELECT \n\to.[OrderID]\n\t,[CustomerID]\n\t,[EmployeeID]\n\t,CONVERT(date, [OrderDate]) AS [OrderDate]\n\t,CONVERT(date, [RequiredDate]) AS [RequiredDate]\n\t,CONVERT(date, [ShippedDate]) AS [ShippedDate]\n\t,[ShipVia]\n\t,[Freight]\n\t,[ShipName]\n\t,[ShipAddress]\n\t,[ShipCity]\n\t,[ShipRegion]\n\t,[ShipPostalCode]\n\t,[ShipCountry]\n\t,[TotalAmount]\n\t, d.ProductID\n\t, d.UnitPrice\n\t, d.Quantity\n\t, d.Discount\nFROM dbo.ext_Order AS o\nINNER JOIN dbo.ext_OrderDetail AS d ON o.OrderID = d.OrderID;\n\n\n-- INSERT into production table\nINSERT dbo.factOrder\n(\n\tProductKey\n\t, OrderDateKey\t\n\t, RequiredDateKey\n\t, ShippedDateKey\n\t, CustomerKey\n\t, ShipperKey\n\t, AddressKey\n\t, EmployeeKey\n\t, OrderID\n\t, UnitPrice\n\t, Quantity\n\t, Discount\n\t, LineTotal\n\t, Freight\n)\n\nSELECT \n\tISNULL(P.ProductKey, -1)\n\t, YEAR(OrderDate) * 10000 + MONTH(OrderDate) * 100 + DAY(OrderDate)\t\n\t, YEAR(RequiredDate) * 10000 + MONTH(RequiredDate) * 100 + DAY(RequiredDate)\n\t, ISNULL(YEAR(ShippedDate) * 10000 + MONTH(ShippedDate) * 100 + DAY(ShippedDate), '99991231')\n\t, ISNULL(C.CustomerKey, -1)\n\t, -1 -- ISNULL(S.ShipperKey, -1)\n\t, -1 -- ISNULL(A.AddressKey, -1)\n\t, -1 -- ISNULL(E.EmployeeKey, -1)\n\t, f.OrderID\n\t, f.UnitPrice\n\t, f.Quantity\n\t, f.Discount\n\t, f.UnitPrice * f.Quantity * (1 - f.Discount)\n\t, f.Freight\nFROM dbo.stage_factOrder f\nLEFT JOIN dbo.dimProduct P ON P.SourceKey = f.ProductID\nLEFT JOIN dbo.dimCustomer C ON C.SourceKey = f.CustomerID\n--LEFT JOIN dbo.dimShipper S ON S.SourceKey = f.ShipperID\n--LEFT JOIN dbo.dimAddress A ON A.ShipName = f.ShipName AND A.ShipAddress = f.ShipAddress\n--LEFT JOIN dbo.dimEmployee E ON E.EmployeeKey = f.EmployeeID\n;\n\n-- Drop the staging table\nDROP TABLE dbo.stage_factOrder;\n\n\n-- Create statistics on the new data\nCREATE STATISTICS [stats_CustomerKey] ON [factOrder] ([CustomerKey]);\nCREATE STATISTICS [stats_ProductKey] ON [factOrder] ([ProductKey]);\nCREATE STATISTICS [stats_OrderDateKey] ON [factOrder] ([OrderDateKey]);\n-- End procedure",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "RD_Sales_DM",
				"poolName": "RD_Sales_DM"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}